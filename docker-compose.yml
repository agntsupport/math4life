version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: math4life-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=/api
    networks:
      - math4life-network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: math4life-backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=math4life
      - DB_PASSWORD=math4life_secure
      - DB_NAME=math4life
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=change_this_in_production_jwt_secret_key_123456
      - SESSION_SECRET=change_this_in_production_session_secret_key_123456
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
      - redis
    networks:
      - math4life-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: math4life-postgres
    environment:
      - POSTGRES_USER=math4life
      - POSTGRES_PASSWORD=math4life_secure
      - POSTGRES_DB=math4life
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - math4life-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: math4life-redis
    volumes:
      - redis_data:/data
    networks:
      - math4life-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: math4life-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - math4life-network

networks:
  math4life-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: